// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef CXX___XSD_TYPE_COMPLEX_MENU_PIMPL_HH
#define CXX___XSD_TYPE_COMPLEX_MENU_PIMPL_HH

#include "complex-menu-pskel.hh"

#include "simple-types-pimpl.hh"

#include "complex-algorithm-pimpl.hh"

#include "complex-scale_set-pimpl.hh"

#include "complex-ext_signal_set-pimpl.hh"

namespace tmxsd
{
  class menu_pimpl: public virtual menu_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    ancestor_id (unsigned int);

    virtual void
    name (const std::string&);

    virtual void
    uuid_menu (const std::string&);

    virtual void
    uuid_firmware (const std::string&);

    virtual void
    global_tag (const std::string&);

    virtual void
    grammar_version (const std::string&);

    virtual void
    n_modules (unsigned int);

    virtual void
    is_valid (bool);

    virtual void
    is_obsolete (bool);

    virtual void
    comment (const std::string&);

    virtual void
    algorithm (const ::tmxsd::algorithm&);

    virtual void
    scale_set (const ::tmxsd::scale_set&);

    virtual void
    ext_signal_set (const ::tmxsd::ext_signal_set&);

    virtual void
    menu_id (unsigned int);

    virtual void
    datetime (const std::string&);

    virtual ::tmxsd::menu
    post_menu ();
  };
}

#endif // CXX___XSD_TYPE_COMPLEX_MENU_PIMPL_HH
