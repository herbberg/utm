// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#ifndef CXX___XSD_TYPE_COMPLEX_ALGORITHM_PIMPL_HH
#define CXX___XSD_TYPE_COMPLEX_ALGORITHM_PIMPL_HH

#include "complex-algorithm-pskel.hh"

#include "simple-types-pimpl.hh"

#include "complex-object_requirement-pimpl.hh"

#include "complex-external_requirement-pimpl.hh"

#include "complex-cut-pimpl.hh"

namespace tmxsd
{
  class algorithm_pimpl: public virtual algorithm_pskel
  {
    public:
    virtual void
    pre ();

    virtual void
    name (const std::string&);

    virtual void
    expression (const std::string&);

    virtual void
    index (unsigned int);

    virtual void
    module_id (unsigned int);

    virtual void
    module_index (unsigned int);

    virtual void
    comment (const std::string&);

    virtual void
    cut (const ::tmxsd::cut&);

    virtual void
    object_requirement (const ::tmxsd::object_requirement&);

    virtual void
    external_requirement (const ::tmxsd::external_requirement&);

    virtual void
    algorithm_id (unsigned int);

    virtual void
    datetime (const std::string&);

    virtual ::tmxsd::algorithm
    post_algorithm ();
  };
}

#endif // CXX___XSD_TYPE_COMPLEX_ALGORITHM_PIMPL_HH
