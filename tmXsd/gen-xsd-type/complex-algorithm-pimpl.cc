// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "complex-algorithm-pimpl.hh"

#include <iostream>

namespace tmxsd
{
  // algorithm_pimpl
  //

  void algorithm_pimpl::
  pre ()
  {
  }

  void algorithm_pimpl::
  name (const std::string& name)
  {
    // TODO
    //
  }

  void algorithm_pimpl::
  expression (const std::string& expression)
  {
    // TODO
    //
  }

  void algorithm_pimpl::
  index (unsigned int index)
  {
    std::cout << "index: " << index << std::endl;
  }

  void algorithm_pimpl::
  module_id (unsigned int module_id)
  {
    std::cout << "module_id: " << module_id << std::endl;
  }

  void algorithm_pimpl::
  module_index (unsigned int module_index)
  {
    std::cout << "module_index: " << module_index << std::endl;
  }

  void algorithm_pimpl::
  comment (const std::string& comment)
  {
    // TODO
    //
  }

  void algorithm_pimpl::
  cut (const ::tmxsd::cut& cut)
  {
    // TODO
    //
  }

  void algorithm_pimpl::
  object_requirement (const ::tmxsd::object_requirement& object_requirement)
  {
    // TODO
    //
  }

  void algorithm_pimpl::
  external_requirement (const ::tmxsd::external_requirement& external_requirement)
  {
    // TODO
    //
  }

  void algorithm_pimpl::
  algorithm_id (unsigned int algorithm_id)
  {
    // TODO
    //
  }

  void algorithm_pimpl::
  datetime (const std::string& datetime)
  {
    // TODO
    //
  }

  ::tmxsd::algorithm algorithm_pimpl::
  post_algorithm ()
  {
    // TODO
    //
    // return ... ;
  }
}

