..

Version 0.7.0
=============

**Main new features:**

* Introduced grammar revision v0.7

  * new object types for HI runs:

    * asymmetry: ``ASYM0X`` ... ``ASYM3X``
    * centrality (signals): ``CENT0`` ... ``CENT7``

* Introduced new event setup conditions:

  * asymmetry: ``esConditionType::Asymmetry0`` ... ``esConditionType::Asymmetry3``
  * centrality: ``esConditionType::Centrality0`` ... ``esConditionType::Centrality7``

**Bugfixes:**

* fixed precision scale prefix for overlap removal functions
* fixed segmentation faults on loading missing scales (now throws an exception)

**Backward incompatibility changes:**


Migration guide: v0.6.5 to 0.7.0
--------------------------------

**Installation:**

* **N.B.** UTM v0.7.0 requires the following prerequisites to be installed:

  * boost_system >= v1.41
  * boost_filesystem >= v1.41
  * xerces-c >= 3.1

**Source code:**

* Updates in ``tmEventSetup``:

  * New asymmetry condition types:

    * new enum ``esConditionType::Asymmetry0`` asymmetry 0
    * new enum ``esConditionType::Asymmetry1`` asymmetry 1
    * new enum ``esConditionType::Asymmetry2`` asymmetry 2
    * new enum ``esConditionType::Asymmetry3`` asymmetry 3

  * New centrality condition types:

    * new enum ``esConditionType::Centrality0`` centrality 0
    * new enum ``esConditionType::Centrality1`` centrality 1
    * new enum ``esConditionType::Centrality2`` centrality 2
    * new enum ``esConditionType::Centrality3`` centrality 3
    * new enum ``esConditionType::Centrality4`` centrality 4
    * new enum ``esConditionType::Centrality5`` centrality 5
    * new enum ``esConditionType::Centrality6`` centrality 6
    * new enum ``esConditionType::Centrality7`` centrality 7

  * Using centrality conditions (signal type):

     * ``esCondition`` can be of type ``esConditionType::Centrality<n>`` for
       heavy ion centrality signals.

       .. sourcecode:: cpp

           // proposal for centrality signal mapping

           // define mapping
           const std::map<esConditionType, size_t> centralityMap = {
             {esConditionType::Centrality0, 0},
             // ...
           };

           if (centralityMap.count(condition.getType()))
           {
             // test for centrality
             size_t index = centralityMap.at(condition.getType());
             // ...
           }
           // ...


* Updates in ``tmGrammar``:

  * New object types in ``Object.hh``:

    * new enum ``Signal`` (signal type objects without threshold)
